# version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: pong_db
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - pong_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    container_name: pong_back
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - pong_network
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 53
      start_period: 10s

volumes:
  postgres_data:

networks:
  pong_network:
    driver: bridge
    